name: Go Checks

on:
  push:
  pull_request:

jobs:

  testing:
    name: Testing
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Get dependencies
      run: go mod download
    - name: Test
      run: go test -cover ./...

  build:
    runs-on: ubuntu-latest
    needs: testing
    if: contains(github.ref, 'master')
    steps:
      - uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: lol3r/random-wikipedia-backend # list of Docker images to use as base name for tags
          tag-sha: true # add git short SHA as Docker tag
          tag-latest: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.docker_meta.outputs.tags }}
          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: contains(github.ref, 'master')
    steps:
      - uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Deploy to Cluster
        uses: steebchen/kubectl@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: set image deployment/random-wikipedia-backend random-wikipedia-backend=lol3r/random-wikipedia-backend:sha-${{ steps.vars.outputs.sha_short }}

  postdeploy:
    runs-on: ubuntu-latest
    needs: deploy
    if: contains(github.ref, 'master')
    steps:
      - uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - uses: frankie567/grafana-annotation-action@v1.0.2
        with:
          apiHost: https://grafana.lol3r.net
          apiToken: ${{ secrets.GRAFANA_API_TOKEN }}
          text: Deployed service 'random-wikipedia-backend' <a href="https://github.com/Lol3rrr/random-wikipedia/commit/${{ github.sha }}" target=\"_blank\">Git (${{ steps.vars.outputs.sha_short }}) </a>

          tags: deployment,tier:backend
